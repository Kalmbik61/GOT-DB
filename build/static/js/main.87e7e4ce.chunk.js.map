{"version":3,"sources":["Components/errors/error.jpg","Components/header/header.js","Components/errors/errors.js","services/gotService.js","Components/randomChar/randomChar.js","Components/rowBlock/rowBlock.js","Components/itemList/itemlist_old.js","Components/itemDetails/itemDetails.js","Components/pages/characterPage.js","Components/pages/booksItem.js","Components/pages/booksPage.js","Components/pages/housesPage.js","Components/404Page/404Page.js","Components/app/App.js","index.js"],"names":["module","exports","HeaderContainer","styled","div","HeaderTitle","h3","HeaderList","ul","Header","to","ErrorMsg","className","style","color","src","img","width","alt","GotService","getRes","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllCharacters","map","_transformChar","getChar","id","character","getAllBooks","_transormBooks","getBooks","getAllHouses","_transformHouses","getHouses","_extractId","item","match","char","name","isData","gender","born","died","culture","house","region","words","titles","overlord","ancestralWeapons","book","numberOfPages","publisher","released","this","data","Div","RandomChar","gotService","onError","setState","error","loading","onCharLoaded","updateChar","Math","floor","random","then","catch","state","bind","timerId","setInterval","props","interval","clearInterval","Button","disabled","Spinner","as","animation","size","Component","defaultProps","RowBlock","left","right","Row","Col","md","Ul","ItemList","itemList","getData","arr","lable","renderItem","key","onClick","onItemSelected","items","renderItems","Field","field","ItemDetails","onLoading","itemId","prevProps","React","Children","children","child","cloneElement","CharacterPage","selectedItem","itemLists","itemDetails","BooksItem","display","bookId","BooksPage","history","push","withRouter","selectedHouse","errorPage","align","textAlign","cursor","fontWeight","fontSize","App","showRandom","onToggleRandom","randomChar","Container","lg","offset","ButtonToggle","marginBottom","path","component","exact","HousesPage","render","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87e7e4ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.a3027ede.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n  font-size: 26px;\n  color: #fff;\n  margin: 0;\n`;\n\nconst HeaderList = styled.ul`\n  display: flex;\n  margin: 0;\n  align-items: center;\n  color: #fff;\n  list-style-type: none;\n  li {\n    margin-right: 20px;\n    font-size: 18px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <HeaderTitle>\n        <Link to=\"/\">Game of Thrones DB</Link>\n      </HeaderTitle>\n      <HeaderList>\n        <li>\n          <Link to=\"/characters/\">Characters</Link>\n        </li>\n        <li>\n          <Link to=\"/Houses/\">Houses</Link>\n        </li>\n        <li>\n          <Link to=\"/Books/\">Books</Link>\n        </li>\n      </HeaderList>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport img from \"./error.jpg\";\n\nconst ErrorMsg = () => {\n  return (\n    <>\n      <span className=\"font-weight-bold\" style={{ color: \"#fff\" }}>\n        Somethins goes wrong\n      </span>\n      <img src={img} style={{ width: 100 + \"%\" }} alt=\"error\" />\n    </>\n  );\n};\n\nexport default ErrorMsg;\n","export default class GotService {\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api'\n    }\n    getRes = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status : ${res.status}`)\n        }\n        return await res.json()\n    }\n    getAllCharacters = async () => {\n        const res = await this.getRes('/characters?page=15&pageSize=10')\n        return res.map(this._transformChar)\n    }\n    getChar = async (id) => {\n        const character = await this.getRes(`/characters/${id}`);\n        return this._transformChar(character)\n    }\n\n    getAllBooks = async () => {\n        const res = await this.getRes('/books/');\n        return res.map(this._transormBooks)\n    }\n    getBooks = async (id) => {\n        const res = await this.getRes(`/books/${id}`);\n        return this._transormBooks(res)\n    }\n\n    getAllHouses = async () => {\n        const res = await this.getRes('/houses/');\n        return res.map(this._transformHouses)\n    }\n    getHouses = async (id) => {\n        const res = await this.getRes(`/houses/${id}`);\n        return this._transformHouses(res)\n    }\n\n    isData(data) {\n        if (data) {\n            return data\n        } else {\n            return ' NO DATA'\n        }\n    }\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)$/;\n        // console.log(item.url)\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformChar = (char) => {\n        return {\n            id: this._extractId(char),\n            name: this.isData(char.name),\n            gender: this.isData(char.gender),\n            born: this.isData(char.born),\n            died: this.isData(char.died),\n            culture: this.isData(char.culture),\n        }\n    }\n    _transformHouses = (house) => {\n        return {\n            id: this._extractId(house),\n            name: this.isData(house.name),\n            region: this.isData(house.region),\n            words: this.isData(house.words),\n            titles: this.isData(house.titles),\n            overlord: this.isData(house.overlord),\n            ancestralWeapons: this.isData(house.ancestralWeapons)\n        }\n    }\n\n    _transormBooks = (book) => {\n        return {\n            id: this._extractId(book),\n            name: this.isData(book.name),\n            numberOfPages: this.isData(book.numberOfPages),\n            publisher: this.isData(book.publisher),\n            released: this.isData(book.released)\n        }\n    }\n\n}","import React, { Component } from \"react\";\nimport { Spinner, Button } from \"reactstrap\";\n// import Spiner from \"../spiner/spiner\";\n// скрыл спинер из урока и использовал из reactstrap\n\nimport ErrorMsg from \"../errors/errors\";\n// создаем сообщение с ошибкой\n\nimport gotService from \"../../services/gotService\";\nimport PropTypes from \"prop-types\";\n\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\nbackground-color: #fff;\npadding: 25px 25px 15px 25px;\nmargin-bottom; 40px;\nalign-items: center;\nh4 {\n    text-align: center;\n    margin-bottom: 20px;\n}\n`;\n\nexport default class RandomChar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      char: {},\n      loading: true,\n      error: false,\n    };\n    this.onError = this.onError.bind(this);\n    this.onCharLoaded = this.onCharLoaded.bind(this);\n    this.updateChar = this.updateChar.bind(this);\n  }\n\n  // static defaultProps = {\n  //   interval: 5000,\n  // };\n  // смотри в самый конец\n\n  gotService = new gotService();\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false });\n  };\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * 140 + 20);\n    // const id = 113131311;\n    this.gotService.getChar(id).then(this.onCharLoaded).catch(this.onError);\n  };\n\n  // хуки жизненного цикла\n  componentDidMount() {\n    this.updateChar();\n    this.timerId = setInterval(this.updateChar, this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const {\n      char: { name, gender, born, died, culture },\n      loading,\n      error,\n    } = this.state;\n\n    //   Пишем условия о загрузке и возможных ошибках\n    if (loading) {\n      return (\n        <Button style={{ color: \"blue\" }} disabled>\n          <Spinner as=\"span\" animation=\"grow\" size=\"lg\" />\n        </Button>\n      );\n    }\n    if (error) {\n      return <ErrorMsg />;\n    }\n\n    return (\n      <Div>\n        <h4>Random Character: {name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"font-weight-bold\"> Gender </span>\n            <span> {gender} </span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"font-weight-bold\"> Born </span>\n            <span>{born} </span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"font-weight-bold\"> Died </span>\n            <span> {died} </span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"font-weight-bold\"> Culture </span>\n            <span> {culture} </span>\n          </li>\n        </ul>\n      </Div>\n    );\n  }\n}\n\nRandomChar.defaultProps = {\n  interval: 5000,\n};\n// или написать static внутри компонента\nRandomChar.propTypes = {\n  // т.к. установлена prop-types можно сделать код меньше\n\n  // interval: (props, propsName, component) => {\n  //   const value = props[propsName];\n\n  //   if (typeof value === \"number\" && !isNaN(value)) {\n  //     return null;\n  //   }\n  //   return new TypeError(`${component} : ${propsName} must be a number`);\n  // },\n\n  // вот так\n  interval: PropTypes.number,\n};\n","import React from \"react\";\nimport { Col, Row } from \"reactstrap\";\n\nconst RowBlock = ({ left, right }) => {\n  // получаем в пропсы этого компонента обьект, поэтому можем его деструктуировать\n  return (\n    <Row>\n      <Col md=\"6\">{left}</Col>\n      <Col md=\"6\">{right}</Col>\n    </Row>\n  );\n};\n\nexport default RowBlock;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Spinner, Button } from \"reactstrap\";\nimport ErrorMsg from \"../errors/errors\";\n\nimport PropTypes from \"prop-types\";\n\nconst Ul = styled.ul`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  margin-bottom: 0;\n  border-radius: 0.25rem;\n}\n  li {\n    cursor: pointer;\n  }\n`;\n\nexport default class ItemList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemList: null,\n      error: false,\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  componentDidMount() {\n    const { getData } = this.props;\n    // в переменной getData  хранится тот промис, что получаю из пропсов на уровень выше (characterPage)\n\n    getData().then((itemList) => {\n      this.setState({\n        itemList: itemList,\n      });\n    });\n  }\n  renderItems(arr) {\n    return arr.map((item) => {\n      const { id } = item;\n      const lable = this.props.renderItem(item);\n      return (\n        <li\n          key={id}\n          className=\"list-group-item\"\n          onClick={() => this.props.onItemSelected(id)}\n        >\n          {lable}\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { itemList, error } = this.state;\n\n    if (error) {\n      return <ErrorMsg />;\n    } else if (!itemList) {\n      return (\n        <Button style={{ color: \"blue\" }} disabled>\n          <Spinner as=\"span\" animation=\"grow\" size=\"lg\" />\n        </Button>\n      );\n    }\n    const items = this.renderItems(itemList);\n\n    return <Ul>{items}</Ul>;\n  }\n}\n\n// ItemList.defaultProps = {\n//   onItemSelected: () => {},\n// };\n\nItemList.propTypes = {\n  onItemSelected: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Spinner, Button } from \"reactstrap\";\nimport ErrorMsg from \"../errors/errors\";\n\nconst Div = styled.div`\nbackground-color: #fff;\npadding: 25px 25px 15px 25px;\nmargin-bottom; 40px;\nalign-items: center;\nh4 {\n    text-align: center;\n    margin-bottom: 20px;\n}\n`;\n\nconst Field = ({ item, field, lable }) => {\n  // item тут это обьект нашего выбора из API, который мы получаем через id\n  return (\n    <li className=\"list-group-item d-flex justify-content-between\">\n      <span className=\"font-weight-bold\"> {lable} </span>\n      <span> {item[field]} </span>\n    </li>\n  );\n  // В спан с item[field] мы подставляем в обьект с данными персонажа и ищем по соответствующему ключу данные, которые выводим\n};\n\nexport { Field };\n\nexport default class ItemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: null,\n      loading: false,\n      error: false,\n    };\n  }\n\n  updateChar() {\n    const { itemId, getData } = this.props;\n    if (!itemId) {\n      return;\n    }\n    getData(itemId).then(this.onLoading);\n  }\n  // чтобы не запутаться мы создали новую функцию  onLoading\n  onLoading = (item) => {\n    this.setState({\n      item: item,\n      loading: false,\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n      item: null,\n    });\n  }\n  componentDidMount() {\n    this.updateChar();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.setState({\n        loading: true,\n      });\n      this.updateChar();\n    }\n  }\n\n  render() {\n    if (!this.state.item && this.state.error) {\n      return <ErrorMsg />;\n    } else if (!this.state.item) {\n      return (\n        <span className=\"font-weight-bold\" style={{ color: \"white\" }}>\n          Please, select a character\n        </span>\n      );\n    }\n    const { loading, item } = this.state;\n    const { name } = item;\n    if (loading) {\n      return (\n        <Div>\n          <Button style={{ color: \"blue\" }} disabled>\n            <Spinner as=\"span\" animation=\"grow\" size=\"lg\" />\n          </Button>\n        </Div>\n      );\n    }\n    return (\n      <Div>\n        <h4 style={{ color: \"red\" }}> {name} </h4>\n        <ul className=\"list-group list-group-flush\">\n          {React.Children.map(this.props.children, (child) => {\n            return React.cloneElement(child, { item });\n            //создаем копию каждого child\n          })}\n        </ul>\n      </Div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row } from \"reactstrap\";\nimport RowBlock from \"../rowBlock/rowBlock\";\nimport ItemList from \"../itemList/itemlist_old\";\nimport ItemDetails, { Field } from \"../itemDetails/itemDetails\";\nimport ErrorMsg from \"../errors/errors\";\nimport gotService from \"../../services/gotService\";\n\nexport default class CharacterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: 130,\n      error: false,\n    };\n  }\n\n  gotService = new gotService();\n\n  onItemSelected = (id) => {\n    this.setState({\n      selectedItem: id,\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Row>\n          <ErrorMsg />\n        </Row>\n      );\n    }\n    // разделили компоненты и передаем их как пропсы в 1 новый компонент RowBlock\n    const itemLists = (\n      <ItemList\n        getData={this.gotService.getAllCharacters}\n        onItemSelected={this.onItemSelected}\n        renderItem={({ name }) => `${name}`}\n      />\n    );\n    const itemDetails = (\n      <ItemDetails\n        itemId={this.state.selectedItem}\n        getData={this.gotService.getChar}\n      >\n        <Field field=\"gender\" lable=\"Gender\" />\n        <Field field=\"born\" lable=\"Born\" />\n        <Field field=\"died\" lable=\"Died\" />\n        <Field field=\"culture\" lable=\"Culture\" />\n      </ItemDetails>\n    );\n\n    return <RowBlock left={itemLists} right={itemDetails} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport gotService from \"../../services/gotService\";\nimport ItemDetails, { Field } from \"../itemDetails/itemDetails\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default class BooksItem extends Component {\n  gotService = new gotService();\n\n  render() {\n    const style = { display: \"flex\" };\n\n    return (\n      <div className={style}>\n        <ItemDetails\n          itemId={this.props.bookId}\n          getData={this.gotService.getBooks}\n        >\n          <Field field=\"numberOfPages\" lable=\"Number Of pages\" />\n          <Field field=\"publisher\" lable=\"Publisher\" />\n          <Field field=\"released\" lable=\"Released\" />\n        </ItemDetails>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row } from \"reactstrap\";\nimport ItemList from \"../itemList/itemlist_old\";\nimport ErrorMsg from \"../errors/errors\";\nimport gotService from \"../../services/gotService\";\nimport { withRouter } from \"react-router-dom\";\n\nclass BooksPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n    };\n  }\n\n  gotService = new gotService();\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Row>\n          <ErrorMsg />\n        </Row>\n      );\n    }\n    return (\n      <ItemList\n        getData={this.gotService.getAllBooks}\n        onItemSelected={(itemId) => {\n          this.props.history.push(itemId);\n        }}\n        renderItem={({ name }) => `${name}`}\n      />\n    );\n  }\n}\n\nexport default withRouter(BooksPage);\n","import React, { Component } from \"react\";\nimport { Row } from \"reactstrap\";\nimport RowBlock from \"../rowBlock/rowBlock\";\nimport ItemList from \"../itemList/itemlist_old\";\nimport ItemDetails, { Field } from \"../itemDetails/itemDetails\";\nimport ErrorMsg from \"../errors/errors\";\nimport gotService from \"../../services/gotService\";\n\nexport default class CharacterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedHouse: 1,\n      error: false,\n    };\n  }\n  gotService = new gotService();\n\n  onItemSelected = (id) => {\n    this.setState({\n      selectedHouse: id,\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Row>\n          <ErrorMsg />\n        </Row>\n      );\n    }\n    const itemLists = (\n      <ItemList\n        getData={this.gotService.getAllHouses}\n        onItemSelected={this.onItemSelected}\n        renderItem={({ name }) => `${name}`}\n      />\n    );\n    const itemDetails = (\n      <ItemDetails\n        itemId={this.state.selectedHouse}\n        getData={this.gotService.getHouses}\n      >\n        <Field field=\"name\" lable=\"Name\" />\n        <Field field=\"region\" lable=\"Region\" />\n        <Field field=\"words\" lable=\"Words\" />\n        <Field field=\"titles\" lable=\"Titles\" />\n        <Field field=\"overlord\" lable=\"Overlord\" />\n        <Field field=\"ancestralWeapons\" lable=\"Ancestral weapons\" />\n      </ItemDetails>\n    );\n\n    return <RowBlock left={itemLists} right={itemDetails} />;\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CardLink } from \"reactstrap\";\n\nconst errorPage = () => {\n  const align = { textAlign: \"center\", color: \"white\" };\n  const styled = {\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    fontSize: 30 + \"px\",\n    color: \"blue\",\n  };\n\n  return (\n    <div style={align}>\n      <h1 style={align}>Oups...., Error 404!</h1>\n      Please, go to the{\" \"}\n      <Link to=\"/\" style={styled}>\n        Home page\n      </Link>\n      .\n    </div>\n  );\n};\n\nexport default errorPage;\n","import React, { Component } from \"react\";\nimport { Col, Row, Container, ButtonToggle } from \"reactstrap\";\nimport Header from \"../header/header\";\nimport RandomChar from \"../randomChar/randomChar\";\nimport CharacterPage from \"../pages/characterPage\";\nimport BooksItem from \"../pages/booksItem\";\nimport BooksPage from \"../pages/booksPage\";\nimport HousesPage from \"../pages/housesPage\";\nimport ErrorMsg from \"../errors/errors\";\nimport gotService from \"../../services/gotService\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport errorPage from \"../404Page/404Page\";\n\nimport \"./app.css\";\n\n// продублировали стили , чтобы они при роутинге не потерялись\n\nexport default class App extends Component {\n  constructor() {\n    super();\n      this.state = {\n      showRandom: true,\n      error: false,\n    };\n    this.onToggleRandom = this.onToggleRandom.bind(this);\n  }\n  componentDidCatch() {\n    this.setState({\n      error: true,\n    });\n  }\n\n  gotService = new gotService();\n\n  onToggleRandom() {\n    this.setState((state) => {\n      return {\n        showRandom: !state.showRandom,\n      };\n    });\n  }\n\n  render() {\n    const { showRandom } = this.state;\n    const randomChar = showRandom ? <RandomChar /> : null;\n\n    if (this.state.error) {\n      return <ErrorMsg />;\n    }\n\n    return (\n      <Router>\n        <div className=\"app\">\n          <Container>\n            <Header />\n          </Container>\n          <Container>\n            <Row>\n              <Col lg={{ size: 5, offset: 0 }}>{randomChar}</Col>\n            </Row>\n            <ButtonToggle\n              onClick={this.onToggleRandom}\n              style={{ marginBottom: 40 + \"px\" }}\n              color=\"primary\"\n            >\n              Toggle Random Character\n            </ButtonToggle>\n            <Switch>\n              <Route\n                path=\"/\"\n                component={() => (\n                  <h1 style={{ color: \"white\" }}>Welcome to GOT DB</h1>\n                )}\n                exact\n              />\n              <Route path=\"/characters\" component={CharacterPage} />\n              <Route path=\"/houses\" component={HousesPage} />\n              <Route path=\"/books\" exact component={BooksPage} />\n              <Route\n                path=\"/books/:id\"\n                render={({ match }) => {\n                  const { id } = match.params;\n                  return <BooksItem bookId={id} />;\n                }}\n              />\n\n              {/* Если такого пути не существует - переходим на страницу ошибки  */}\n              <Route path=\"*/\" component={errorPage} />\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/app/App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\n      ReactDOM.render(\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}